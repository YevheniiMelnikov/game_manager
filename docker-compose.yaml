x-shared-image: &shared-image
  image: myapp:latest
  build:
    context: .
    dockerfile: Dockerfile
    args:
      INSTALL_DEV: "false"
  env_file: .env
  networks: [game_manager]
  restart: unless-stopped

services:
  web:
    <<: *shared-image
    container_name: api
    environment:
      RUN_MIGRATIONS: "true"
    command: >
      uvicorn config.asgi:application --host 0.0.0.0 --port 8000
    volumes:
      - staticfiles:/app/staticfiles
      - ./apps/users/static:/app/apps/users/static:ro
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery:
    <<: *shared-image
    container_name: celery_worker
    environment:
      RUN_MIGRATIONS: "false"
      DJANGO_SETTINGS_MODULE: config.settings
    command: celery -A config worker -l info
    depends_on:
      - db
      - redis

  celery_beat:
    <<: *shared-image
    container_name: celery_beat
    environment:
      RUN_MIGRATIONS: "false"
      DJANGO_SETTINGS_MODULE: config.settings
    command: celery -A config beat -l info
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    container_name: db
    env_file: .env
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [game_manager]

  redis:
    image: redis:7.4.2
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["6379:6379"]
    volumes: [redisdata:/data]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks: [game_manager]

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
      - "4443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - staticfiles:/opt/api/staticfiles:ro
    depends_on:
      - web
    restart: unless-stopped
    networks: [game_manager]

volumes:
  pgdata:
  redisdata:
  staticfiles:

networks:
  game_manager:
    driver: bridge
